{"ast":null,"code":"/* import { useState } from 'react';\r\nimport { FormInput } from '../form-input/form-input.component';\r\n\r\nimport { createAuthUserWithEmailAndPassword, createUserDocumentFromAuth } from '../../utils/firebase/firebase.utils'\r\nimport './sign-up-form.styles.scss'\r\n\r\nconst defaultFormFields = {\r\n  displayName: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword:'',\r\n}\r\n\r\nconst SignUpForm = () => {\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { displayName, email, password, confirmPassword } = formFields; \r\n\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  }\r\n\r\n  const handleSubmit = async (event) => {\r\n    \r\n    event.preventDefault();\r\n\r\n    if(password !== confirmPassword){\r\n      alert(\"password do not match!\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const { user } = await createAuthUserWithEmailAndPassword(email, password);\r\n      await createUserDocumentFromAuth (user, {displayName});\r\n      resetFormFields();\r\n\r\n    } catch (error) {\r\n      if(error.code === 'auth/email-already-in-use'){\r\n        alert('Cannot Create user, email already in use');\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormFields({...formFields, [name]: value })\r\n\r\n  };\r\n\r\n  return(\r\n    <div className='fontFamily'>\r\n      <h1 className=\"pb-2\">Sign up with your email and password</h1>\r\n      <form className=\"grid grid-col-4 gap-2\" onSubmit={handleSubmit}>\r\n        \r\n        <FormInput \r\n          label=\"Display Name\"\r\n          name='displayName' \r\n          type=\"text\" \r\n          className=\"border border-spacing-1\" \r\n          onChange={handleChange} \r\n          value={displayName} \r\n          required\r\n        />\r\n\r\n        <FormInput \r\n          label=\"Email\"\r\n          name='email' \r\n          type=\"text\" \r\n          className=\"border border-spacing-1\" \r\n          onChange={handleChange} \r\n          value={email} \r\n          required\r\n        />\r\n\r\n        <FormInput \r\n          label=\"Password\"\r\n          name='password' \r\n          type=\"password\" \r\n          className=\"border border-spacing-1\" \r\n          onChange={handleChange} \r\n          value={password} \r\n          required\r\n        />\r\n\r\n        <FormInput \r\n          label=\"Comfirm Password\"\r\n          name='confirmPassword' \r\n          type=\"password\" \r\n          className=\"border border-spacing-1\" \r\n          onChange={handleChange} \r\n          value={confirmPassword} \r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"signUpButton fontFamily bg-blue-500 hover:bg-blue-700 font-bold py-2 px-4 rounded w-2/4 flex justify-center\" >Sign Up</button>\r\n\r\n      </form>\r\n      \r\n    </div>\r\n    \r\n  )\r\n};\r\n\r\nexport default SignUpForm; */","map":{"version":3,"names":[],"sources":["C:/Users/kfir/desktop/udemy/nana-style/src/components/sign-up-form/sign-up-form.component.jsx"],"sourcesContent":["/* import { useState } from 'react';\r\nimport { FormInput } from '../form-input/form-input.component';\r\n\r\nimport { createAuthUserWithEmailAndPassword, createUserDocumentFromAuth } from '../../utils/firebase/firebase.utils'\r\nimport './sign-up-form.styles.scss'\r\n\r\nconst defaultFormFields = {\r\n  displayName: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword:'',\r\n}\r\n\r\nconst SignUpForm = () => {\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { displayName, email, password, confirmPassword } = formFields; \r\n\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  }\r\n\r\n  const handleSubmit = async (event) => {\r\n    \r\n    event.preventDefault();\r\n\r\n    if(password !== confirmPassword){\r\n      alert(\"password do not match!\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const { user } = await createAuthUserWithEmailAndPassword(email, password);\r\n      await createUserDocumentFromAuth (user, {displayName});\r\n      resetFormFields();\r\n\r\n    } catch (error) {\r\n      if(error.code === 'auth/email-already-in-use'){\r\n        alert('Cannot Create user, email already in use');\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormFields({...formFields, [name]: value })\r\n\r\n  };\r\n\r\n  return(\r\n    <div className='fontFamily'>\r\n      <h1 className=\"pb-2\">Sign up with your email and password</h1>\r\n      <form className=\"grid grid-col-4 gap-2\" onSubmit={handleSubmit}>\r\n        \r\n        <FormInput \r\n          label=\"Display Name\"\r\n          name='displayName' \r\n          type=\"text\" \r\n          className=\"border border-spacing-1\" \r\n          onChange={handleChange} \r\n          value={displayName} \r\n          required\r\n        />\r\n\r\n        <FormInput \r\n          label=\"Email\"\r\n          name='email' \r\n          type=\"text\" \r\n          className=\"border border-spacing-1\" \r\n          onChange={handleChange} \r\n          value={email} \r\n          required\r\n        />\r\n\r\n        <FormInput \r\n          label=\"Password\"\r\n          name='password' \r\n          type=\"password\" \r\n          className=\"border border-spacing-1\" \r\n          onChange={handleChange} \r\n          value={password} \r\n          required\r\n        />\r\n\r\n        <FormInput \r\n          label=\"Comfirm Password\"\r\n          name='confirmPassword' \r\n          type=\"password\" \r\n          className=\"border border-spacing-1\" \r\n          onChange={handleChange} \r\n          value={confirmPassword} \r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"signUpButton fontFamily bg-blue-500 hover:bg-blue-700 font-bold py-2 px-4 rounded w-2/4 flex justify-center\" >Sign Up</button>\r\n\r\n      </form>\r\n      \r\n    </div>\r\n    \r\n  )\r\n};\r\n\r\nexport default SignUpForm; */"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}